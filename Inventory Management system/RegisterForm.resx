<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAAJRJREFUOE9jIAKIAHEwEAcBsTBIgBIQBcQfgPg/FIPYkUBMFjAC4l9AvAGItYBY
        F8oGiRkCMclgARA/B2J2MA8CuID4NRDPA/NIBPuAeC+EiQL8gNgbwiQN7Afi3RAmdQBVDIwB4nIovgvE
        t5H4uDBID05wH4hhSYRYDNKDE4waSBQeNRAVjEAD3YA4jUQM0gMFDAwAr5O0pa2xSMAAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAJRJREFUOE9jIAKIAHEwEAcBsTBIgBIQBcQfgPg/FIPYkUBMFjAC4l9AvAGItYBY
        F8oGiRkCMclgARA/B2J2MA8CuID4NRDPA/NIBPuAeC+EiQL8gNgbwiQN7Afi3RAmdQBVDIwB4nIovgvE
        t5H4uDBID05wH4hhSYRYDNKDE4waSBQeNRAVjEAD3YA4jUQM0gMFDAwAr5O0pa2xSMAAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAPFJREFUOE/F089KAlEYhvHJRVC6raB1bly1kPACwo2EBXkJguIdJYgbbyK8AldC
        GyFvoCKhRauCfF6YGY7yEecbER/4wXDOnI8Z/ySHqIxm6lQLu/SAFf5Sn2ijUA38IBuW0doN3E2xPSzz
        DFcV/MIaJnpKfbbRVWENCume6C5gDQmdw9UrrEGygLserGHShbsjjLE9bATtFe4OQzyhpQVvJTxCQ/rQ
        TyhL1wNMoL1j/NsVZghf8RvzlK7DPX051zCr4R3hgRhfqGMjPfoLrAMxljhB3i2sGz00I+8SH7BujPEG
        /bs2OsM9Ok46o7P7KEnWglKSVOzUYVIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAADAxJREFUeF7t
        mwlwFFUax9l73bJ2q7a2drfcKlcJl4oIuiouiOuxKpfihWIQoqIIGIEsCASNMYIkSDAx4TIHSQiREIUc
        JEAygZADSEgAc2cScs30HJkz0zMhcuTb9zovk/TMlzk6A7pV+1X9isy81+/7/l+/s6cZ9X+7wWbRcROs
        eu5tm5HbajVwWTajst5q5BQ2A2ck34HVqLTaDEotKWsh350kn3f3GJRBPUbVYwDy37Bm/ncMoPJXRORz
        RNQ+IlBFRUqFJKqH/FtAWMnz6j8zFz9Nu2xS32E1KKOI8K6hInwFafsq6SE5VoPqWebyp2G9XcpxJLAk
        0oWvYIHfCEgyztlM3DwWwo9j0Nl5CxEeSoT3YkHeDEgiiniD+h4W0s0z3qR4nDhvx4K62ZAb8AO9EQDw
        CxbejTPi5GfE4Toi/hoWjCOWNhmYqr8W/rWqq8Fm6ETr+QIS0ymbvvNvLFTfG2i1t5LZ/SjmfDhMdftA
        lTp6CH6gTr8PRZv9DOiLV4G5IZ0kSoG25xaynNp0qgdZyL4zs7nzj2RJOo06dYFVUwPqtHEOSXCP9vCj
        0C0/jLbpDrqvICvFTBb6yM1i4f5ENy+Ys+GwahvAcDYUNN9ORQV6hh8YK7ei7btDmBeMyrlMgnQDjvud
        t3feXJtEuvRkRJA0zDUJqB930E1Uj5F7lEnx3uis6u2YN5ZvQkWMBDo/2LrkqD+3kO023YozSd4ZXVrQ
        RofBXB2PChgpypSJ0BwzCRTfLQFj43HUt2uUNbQnM1meGVnnn/B0qaPw6u9BdeBeVMBI6IwfDfJtd0KT
        ndHA5QZJWE6VcUyaexPGvUHZijeEoy8LRgWMhPY9o4cIF8PlrUHjcIXVoJjFJLo2kq0tWAOucDXbazIe
        An3Be2Aq2UT4DHR5/qDaPwatS+EIrTtx4XYi/aC7tRSNZTjIytAMbW2/ZTJxoweb/iUEbwSD7yxDhaj3
        jwVDwXKwnN9H2C/CXBZOkjbN6Rouhdz5+H+AYv9LwGUsBuXBN6AjeTY0R9/jlASVLBSNxxVkj7CRScWN
        THzJ2IWuwCY/9f7xYCr+1Em4iKpUMBRtgK4jL0JX1mzQ578DxrLtaN3uir3QFveYKAHtafPReNxgNhov
        /YHJFRtZM28nd9/rI62xYotTAgyFq1EhI8FQFC5KwKW4x9F43EHPMkyy2MjEF4Vd4A664xsqXpMxlQSc
        6iRg5KRCS8x9gwnY/Qgaj3uUarLH+SWT3W/0C1KgwS9wjfFchCgB+vylSPC+oX3vM/YEtCY8icbjCVaj
        YjaT3m/ky+cdK3mK6fs4UQLMZVvR4H2BMt3fnoD2tJfQeDyBbJMPMOn9Ro6RqVhFT+i+dHQwAWkThMkN
        C94XqLNW2BOgzFmFxuMJ9JwgWhLJF0qsoidYtY1EvJ+QAM1309DAfYXmSJA9AdqSKDQeT6FPtQTx9LCA
        VfAGzaHpQgK6cuYOBlxFumz+V1Cf9glcTFwPF/duEP7uPBYFZqSXKGWxcD5pPZREr4CibUuhLGYFVO8P
        Af2ZRHsd7dF19gRIOxcMwcCFCQlgP1rglTxEJ3tLSIAu71Uh0O7KfdCQFgpVcWuh5XA4SUQ0KI5HC39f
        iF8HNckbyckxyS6sIWMTyLYEQGXCh9B8eAu0HtkGTd9uhtOxgVC49W3gTuwQ6unyQ/oTQHaCfFcLGovH
        GLgTQgLIhy+cCr3Eqq4Fbc5s0B19TQhUX5YAjelhYBxy9wYwVSRDwzehoCnaLXxWFMSA7PM3oYP0DMe6
        3aQX1ZG6zZnhwmdd4Wcgj7oLjLU5aBxeohISQDYG2Uih11g6ikkC5juJMFSkwPplC+CjwIVgIj3Dsbw6
        9SPhzg98PrRzIyxZMBeqMp13hV2yMFAVhKD+paDX639PDz+1WKEUjKdDnII+lbYFxo0bJ1Dx3Tan8qr4
        D6Em9WP755lPThfq0qQNrUfpKgwDi/J71LcUrCbllBGtAI50N2Y6Ba0vT4b/vDsfNix/He0BjgnIiN0A
        i16eiSbLeC4R9SsVshL8i/aAbqxQCjxX7RS0OxwT4BK5DPUrHeVcega4ihdKoKsZD9wF3iSAby3B/UqE
        N3KvkyGgtGGFktB3oIG7wqsEtJfjfqViUr1It8FatFAilgtpaPDD0ZwZAW25kWiZI1bFedSnVHg992+6
        DDZjhVKxXMxAg/cFVlUN6lMyesVUOgcUoYUSsdRkocH7AqumCfUpGfpjKpkJ96CFEuEbjqHB+wKbvg31
        KQX6GyL9tXsUfSEJqyAVa0sRGvyIuZiO+pOMQVklbIXp21hoBYnQiQoVQE6AGcHvwr5Vi4dndQC0HY3F
        r6/PRf1Jh/1YAlD7a58vhcOsBK15sXBg3RJUfFrQm3Dxm/5DDwbfdhb3J5EeA7dASAA1cjSUYZWkwrcU
        oyIoXWWJcG5vGBwNXwWHQ5ZD7uaVUJ7wKWiK49H6AhdI9yeJxXxJgUz8fVat9q9MvnAkXulYaUSQYA0V
        zvt+KXQTzC1luB+JkB5fwaT3G30JUcpvAq5okSWA/uzgQw8pdJN5o7VgB5g6a1EfI+B9Jn3QyJdHHCqN
        CHlBPNRlRoLi5B5UnDsM5BQpz42G2sxtPk0APfvwGs1fmOxBo29gYhdIpa00XQiecul4LJjOeT4kVCUk
        eVmRwrUNuTFgVjagPiRhUKYwyc5GxwZ6kQR6LXrQycuhLvtLQUh9diRwp74WHpZioinGihRoOR5jT1xb
        6UG40mMBi3qEz/8YdPLjDeqJTK6z0ddPsQslYeXJRgugx6SBZlmiXZQ87yshEboze4ngZNCXJ4GmLAHa
        Zbugnt31uuwoIXnQ1ye0oVf6KAFGLoNJHd7IkliIXewtFp7uNPvt+vVroKkrhlom0BXNJ5LgcreOXdlv
        bU3VqA9vIJN8L/35n8kc3tg7ApLe/60qOQaRYcHw8pxnQcHR3yDFZtEpoOnYblQ4HfOahlLou36d1R60
        hQsWwLrAdyAvYy8YJA4HMrxDmET3RnqBRy9IKeQXIS0uGt5/yx8emDwFbr/dz86JolIWvtiuXb0KnecL
        ReKbyIrBG7tYDbFdvtwranes33h4YebTEPHxGijNz6TjGo1NjLLW7dshQ434/Tm2OzRrO6AwJx1C134A
        zzz+GNx5x1hRcEP5IvKrfgXDWGWzCoL3HIbk/Ar44ZrzXR+wltYOtP0BHpg8GZYtehVSd38JymbnJ8Zk
        3F/mjYpJTJrnZtN13EafFtVVFsOubWGw6JXn4a7xd6NBYMya8wKT4Gw9V/vAP9cGY+ItcG8SDxXqa6zE
        2XJy89H2Me74+xh4asZ0CF71njBcTOo2+ug7gEny3uK2h60eP3YC6swTen+4wmQMGhW/kIkfYHIyDxe7
        8CSEhG5G2/aENe8FtDIp0i0yNGiX3+hxqAN3tHdyTEa/XbnWB4vyxOIHmJLCQ6P+Kqs5aI/OeBJt2x1v
        vDSXP3jwoG/+D0F48KoDdPLBHLkiX1bEZNAlvQ9q5B2wNJNDE/BIihGOVciBt/awKwCststou+4ImD/P
        HBkZeQsL3zcW9enaTRPvugd1OByfh0cKQqj4WiL+VEUtnCyvhfkZGpH4yUlmSC9pFMrLzjcAT4RTa2pu
        Rdt1xdKFr+h8ducdbWdE8LszHnm4D3OM8dTTc0TiBzh+th5m7eqEZ3f2E54tF5WfPt8I1p5eyMzOQ9vF
        GDtmAoQELTvFQr1xFh8TcVvAq/PMWBAYZ6rqROIoO7Lq4c7AJjv+XzY41TlzoRGWBwahbToy/eEH+3ZE
        fLychXhzbHvomh3THnrQbW+I2ZPiJC4gukGUgLuDmkB2RlyHMnHi/WibA9B5aeWShe1ZcZudj7c3w6jj
        1UsXt9w9Yfi5IWjdJyJRdA6YtLZRlABK9KF6Ub1DeSfR9ih0vX/tuZk9uyJCB5/r/ZiWGBU2ds2yxY33
        TZzkFOwLL/uLhDl2/wEch8H22HintujO840X5/A3vbt7arGxsbdu2bjymwXzZtkGls0p908VCXPs/gM4
        DoPA1evtwp+aMe36hsC3L+wI/+yfzNVP3+jwoJuoD97y70xMSe/LyS8dtvsPQIdBfnElHDiUCx+uXsmH
        rV1x/OvtnzzBmrwBNmrUfwGQxxLies+E8AAAAABJRU5ErkJggg==
</value>
  </data>
</root>